extends ../layout

block body
  - var name = [user.firstname, user.lastname].join(' ')
  nav.navbar.navbar-default
    .container-fluid
      .navbar-header
        span.navbar-brand= name
      ul.nav.navbar-nav.navbar-right
        li
          a(href="/logout") Выход
  block container
  
block styles
  link(rel="stylesheet", href="http://cdn.leafletjs.com/leaflet/v0.7.7/leaflet.css")

block scripts
  script(src="http://cdn.leafletjs.com/leaflet/v0.7.7/leaflet.js")
  script(type="text/javascript").
    var my = JSON.parse('!{JSON.stringify(user)}');
    
    function get_friends(){
      $.ajax({
        url: '/user/friends/'+my.id,
        method: 'GET'
      }).done(function(response){

        $('#friends').html(response);

        $('.delete-friend').on('click', function(e){
          $.ajax({
            url: '/user/friends/'+$(e.target).data('id'),
            method: 'DELETE'
          }).done();
        });
      });
    };
    
    function set_status(status) {
      var avatar = [];
      
      if (my.id == status.id) {
        avatar = $('#avatar-wrapper');
      } else {
        avatar = $('div[data-status_user_id="' + status.id + '"]');
      }

      if (avatar.length) {
        if (status.online) {
          if (!avatar.hasClass('online'))
            avatar.addClass('online');
        } else {
          if (avatar.hasClass('online'))
            avatar.removeClass('online');
        }
      }
    }
    
    $(function(){
      var map = L.map('map').setView([51.505, -0.09], 13);
      L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
      }).addTo(map);

      map.on('locationfound', function(e){
        map.setView([e.latitude, e.longitude],13);
        L.marker([e.latitude, e.longitude]).addTo(map);
      });

      map.on('locationerror', function(e){
        console.log(e.message);
      });

      map.locate();

      get_friends();

      io.socket.get('/user/subscribe', function(resData, jwres){
        return;
      });
      
      io.socket.on('user_status', function(status) {
        if (Utils.isArray(status)) {
          for (var i in status) {
            set_status(status[i]);
          }
        } else {
          set_status(status);
        }
        console.log(status);
      });
      
      var pingInterval = setInterval(function() {
        $.ajax({
          url: '/user/ping',
          method: 'GET'
        });
      }, 60000);
    });
